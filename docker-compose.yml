version: "3.7"

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
  nginx-proxy-acme:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
      - ./acme:/etc/acme.sh
    environment:
      - DEFAULT_EMAIL=shubham.garg@mail.utoronto.ca
  backend:
    image: ghcr.io/utsc-cscc09-programming-on-the-web/shubhmgrg-webgallery
    container_name: backend
    restart: always
    expose:
      - 5000
    env_file:
      - ./epiready-backend/.env
    environment:
      - VIRTUAL_HOST=api.epiready.duckdns.org
      - LETSENCRYPT_HOST=api.epiready.duckdns.org

  frontend:
    image: ghcr.io/utsc-cscc09-programming-on-the-web/shubhmgrg-webgallery
    container_name: frontend
    restart: always
    expose:
      - 3000
    environment:
      - VIRTUAL_HOST=epiready.duckdns.org
      - LETSENCRYPT_HOST=epiready.duckdns.org

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  volumes:
    postgres_data:
  

# version: '3.8'

# services:
#   frontend:
#     image: ghcr.io/utsc-cscc09-programming-on-the-web/frontend-taggit
#     container_name: frontend
#     env_file: ./frontend/.env.local
#     expose:
#       - "3000"
#     restart: always
#   backend:
#     image: ghcr.io/utsc-cscc09-programming-on-the-web/backend-taggit
#     container_name: backend
#     env_file: ./backend/.env
#     ports:
#       - "4242:4242"
#     depends_on:
#       - postgres
#     restart: always

#   nginx:
#     image: staticfloat/nginx-certbot
#     container_name: nginx
#     ports:
#       - "80:80"
#       - "443:443"
#     volumes:
#       - ./nginx/conf.d:/etc/nginx/user.conf.d:ro
#       - ./nginx/certbot:/etc/letsencrypt
#     environment:
#       - CERTBOT_EMAIL=shubham.garg@mail.utoronto.ca
#       - CERTBOT_DOMAINS=taggit.tech,api.taggit.tech
#       - CERTBOT_EXTRA_ARGS=--agree-tos
#     depends_on:
#       - frontend
#       - backend
#       - peerjs
#     restart: always

#   postgres:
#     image: postgres:15-alpine
#     container_name: postgres
#     environment:
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       POSTGRES_DB: ${POSTGRES_DB}
#     volumes:
#       - postgres_data:/var/lib/postgresql/data

# volumes:
#   postgres_data: